syntax = "proto3";

option go_package = "github.com/miltsm/pesan-grpc-stubs";
option java_multiple_files = true;
option java_package = "com.github.miltsm.pesan_grpc_stubs";
option java_outer_classname = "PesanService";

package pesan;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service Pesan {
	rpc OnboardWithPublicKey(OnboardRequest) returns (AssertSession);
	rpc VerifyPublicKeyAndOnboard(VerifyPublicKeyRequest) returns (UserSession);

	rpc DiscoverLogin(google.protobuf.Empty) returns (AttestSession);
	rpc VerifyPublicKeyLogin(VerifyPublicKeyRequest) returns (UserSession);

	rpc CreateNewProduct (NewProductRequest) returns (NewProductReply);
	rpc UploadProductPhotos (stream NewPhoto) returns (google.protobuf.Empty);
}

message OnboardRequest {
	string user_handle = 1;
	optional string display_name = 2;
	optional string new_password = 3;
}

// this allow for caching on front-end & prevent abuse calls
message AssertSession {
	bytes challenge = 1;
	google.protobuf.Timestamp valid_until = 2;
}

message VerifyPublicKeyRequest {
    bytes signed = 1;
}

// this allow for caching on front-end & prevent abuse calls
message AttestSession {
    bytes challenge = 1;
    google.protobuf.Timestamp valid_until = 2;
}

message UserSession {
	string access_token = 1;
	string user_handle = 2;
	string display_name = 3;
	optional string refresh_token = 4;
	optional uint32 total_passkey = 5;
	optional google.protobuf.Timestamp last_password_updated = 6;
}

message NewProductRequest {
	string name = 1;
	optional string description = 2;
	string unit_label = 3;
	double unit_price = 4;
	repeated Category categories = 5;
}

message Category {
	// for existing category selection
	optional string category_id = 1;
	// for new category
	optional string name = 2;
	optional string description = 3;
	optional google.protobuf.Timestamp available_from = 4;
	optional google.protobuf.Timestamp available_until = 5;
	repeated string available_weekly = 6;
}	

message NewProductReply {
	string new_product_id = 1;
}

message NewPhoto {
	bytes chunk = 1;
}
